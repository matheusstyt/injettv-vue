{"version":3,"file":"js/parada.a3eda086.js","mappings":"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","sources":["webpack://injettv-vue/./src/views/ParadasView.vue","webpack://injettv-vue/./src/views/ParadasView.vue?38ec"],"sourcesContent":["<template>\r\n    <div class=\"paradas\">\r\n      <h1 class=center-align>Paradas | Alertas</h1>\r\n      {{ cd }}\r\n        <div class=\"container\">\r\n            <table>\r\n                <tr>\r\n                    <th>MÁQUINA</th>\r\n                    <th>DESCRIÇÃO</th>\r\n                    <th>DURAÇÃO (HH:MM:SS)</th>\r\n                </tr>\r\n                <tr v-for=\"(pt, index) in pts\" class=\"teste\" id=\"circle1\">\r\n                    <td :style=color+pt.cor><b>{{ pt.cdPt}}</b></td>\r\n                    <td :style=color+pt.cor><b>{{ pt.descricao}}</b></td>\r\n                    <td :style=color+pt.cor><b>{{ pt.tempo}}</b></td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n    </div>\r\n  \r\n    </template>\r\n  <script>\r\n  // @ is an alias to /src\r\n  // import HelloWorld from '@/components/HelloWorld.vue'\r\n  import { isIntegerKey } from '@vue/shared'\r\n  import axios from 'axios'\r\n  export default {\r\n      name: 'Maquinas',\r\n    components: {\r\n          \r\n    },\r\n    props:{\r\n        cd : String || '000001'\r\n    },\r\n    created () {\r\n        setInterval(() => {\r\n            this.getParadas()\r\n        }, 15000)\r\n    },\r\n    data(){\r\n        return{\r\n            sec: 0,\r\n            color: 'color: ',\r\n            pts: null,\r\n            turno : null,\r\n            maquinas : undefined,\r\n            legendaColors1 : [\r\n                {nome:'Parada', color: '#c0392b'},\r\n                {nome:'Na Meta', color: '#4cd137'},\r\n                {nome:'Fora da Meta', color: '#f1c40f'},\r\n                {nome:'Offline', color: 'rgb(135, 135, 135)'}\r\n                    ],\r\n            legendaColors2 : [\r\n                {nome:'Em Alerta', color: '#f1c40f'},\r\n                {nome:'Sem Planejamento', color: 'blue'},\r\n                {nome:'90% Op Concluída', color: 'rgb(27, 26, 90)'},\r\n                {nome:'Planejamneto Concluído', color: 'rgb(45, 238, 235)'},\r\n                {nome:'Índice de Refugo Maior que 5%', color: 'rgb(142, 142, 142)'},\r\n                {nome:'Parada sem Peso na Eficiência', color: 'rgb(235, 23, 192)'},\r\n                {nome:'Parada não Informada', color: 'rgb(0, 0, 0)'},\r\n                {nome:'CIP(Controle Início Processo)', color: 'rgb(115, 239, 111)'},\r\n                {nome:'Sem Ocorrências', color: '#ffff'}\r\n            ]\r\n        }\r\n    },\r\n      methods:{\r\n          async getParadas(){\r\n              function getToday(){\r\n                  var today = new Date();\r\n                  var dd = String(today.getDate()).padStart(2, '0');\r\n                  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n                  var yyyy = today.getFullYear();\r\n                  var h = today.getHours(), m = today.getMinutes(), s = today.getSeconds()\r\n                  \r\n                  if(String(today.getHours()).length < 2){\r\n                      h = '0'+String(today.getHours())\r\n                  }\r\n                  if(String(today.getMinutes()).length < 2){\r\n                      m = '0'+String(today.getMinutes())\r\n                  }\r\n                  if(String(today.getSeconds()).length < 2){\r\n                      s = '0'+String(today.getSeconds())\r\n                  }\r\n                  today = mm + '/' + dd + '/' + yyyy + \"  \" + h+\":\"+m+\":\"+s\r\n                  return today;\r\n              }\r\n              await axios.all([        \r\n                  axios.get(`http://170.10.0.208:8080/idw/rest/injet/paradas/pesquisaParadasByGalpao` ,{params: {cdGalpao:this.cd}}),\r\n                  axios.get(`http://170.10.0.208:8080/idw/rest/injet/alertas/pesquisaAlertasByGalpao`,{params: {cdGalpao:this.cd}})\r\n              ])\r\n              .then(\r\n                  axios.spread((paradas, alertas) => {\r\n  \r\n                  let alerta = [], parada = [], pts = [], pts_ = [];\r\n                  \r\n                  // FORMATANDO O HORÁRIO\r\n                  let formatado = ''\r\n                  for (var par = 0; par < paradas.data.paradasGalpao.length;par++ ){\r\n                      \r\n                      let tempoFormatado = paradas.data.paradasGalpao[par].tempoParado.split(\":\");\r\n  \r\n                      if( tempoFormatado[0].length < 2 ){\r\n                          tempoFormatado[0] = '0'+tempoFormatado[0]\r\n                      }\r\n                      if( tempoFormatado[1].length < 2 ){\r\n                          tempoFormatado[1] = '0'+tempoFormatado[1]\r\n                      }\r\n                      if( tempoFormatado[2].length < 2 ){\r\n                          tempoFormatado[2] = '0'+tempoFormatado[2]\r\n                      }\r\n  \r\n                      formatado = tempoFormatado[0]+':'+tempoFormatado[1]+':'+tempoFormatado[2]\r\n                  \r\n                      parada.push({\r\n                          cdPt: paradas.data.paradasGalpao[par].cdInjetora,\r\n                          tempo: formatado,\r\n                          descricao: paradas.data.paradasGalpao[par].dsParada,\r\n                          cor: '#ff0000'\r\n                      });\r\n                  }\r\n  \r\n                  for (var ale = 0; ale < alertas.data.alertasGalpao.length;ale++ ){\r\n                      \r\n                      let alertaFormatado = alertas.data.alertasGalpao[ale].tempoAlerta.split(\":\");\r\n                      //console.log('opa : '+alertas.data.alertasGalpao[ale].tempoAlerta)\r\n                      if( alertaFormatado[0].length < 2 ){\r\n                          alertaFormatado[0] = '0'+alertaFormatado[0]\r\n                      }\r\n                      if( alertaFormatado[1].length < 2 ){\r\n                          alertaFormatado[1] = '0'+alertaFormatado[1]\r\n                      }\r\n                      if( alertaFormatado[2].length < 2 ){\r\n                          alertaFormatado[2] = '0'+alertaFormatado[2]\r\n                      }\r\n  \r\n                      formatado = alertaFormatado[0]+':'+alertaFormatado[1]+':'+alertaFormatado[2]\r\n                      //console.log('formatado : '+formatado)\r\n                      alerta.push({\r\n                          cdPt: alertas.data.alertasGalpao[ale].cdInjetora,\r\n                          tempo: formatado,\r\n                          descricao: alertas.data.alertasGalpao[ale].dsAlerta,\r\n                          cor: '#ff8b16'\r\n                      });\r\n                      //console.log(alertas.data[ale])\r\n                  }\r\n                  //console.log(\"3\")\r\n  \r\n                  pts = pts.concat(parada, alerta);\r\n  \r\n                  if(typeof this.maquinas === 'string'  ){            \r\n                      if (this.maquinas) {\r\n                          //console.log(\"maquina: \" + \" \" + this.maquinas)\r\n                              pts_ = pts_.concat(pts.filter((pt) => {\r\n                                  //console.log(\"cdInjetora: \" + \" \" + pt.cdPt + \" == \" + this.maquinas )\r\n                                  if (pt.cdPt === this.maquinas)                             \r\n                                  return pt;\r\n                              }));\r\n                          pts = pts_;\r\n                      }\r\n                  }\r\n                  if(typeof this.maquinas === 'undefined' || typeof this.maquinas === 'object'  ){            \r\n                      if (this.maquinas) {\r\n                          this.maquinas.forEach((maquina) => {\r\n                              //console.log(\"maquina: \" + \" \" + maquina)\r\n                              pts_ = pts_.concat(pts.filter((pt) => {\r\n                                  //console.log(\"cdInjetora: \" + \" \" + pt.cdPt + \" == \" + maquina )\r\n                                  if (pt.cdPt === maquina)                             \r\n                                  return pt;\r\n                              }));\r\n                          });\r\n                          pts = pts_;\r\n                      }\r\n                  }\r\n                  \r\n                  this.pts = pts\r\n              }))\r\n              .catch((error) => {this.pts = error});\r\n          }\r\n      },\r\n  \r\n    mounted () {\r\n        this.getParadas()\r\n    }\r\n  }\r\n  </script>\r\n  <style scoped>\r\n  html{\r\n      --tema-padrao: #0077FF;\r\n      --bg: #FCFCFC;\r\n      --bg-panel: #EBEBEB;\r\n      --bg-container: rgba(0, 0, 0, 0.1);\r\n      --secundary-color: #FCFCFC;\r\n      --color: rgba(0, 0, 0, 0.8);\r\n      --color-headings: #0077FF;\r\n      --color-text: #333333;\r\n      --color-title: #262626;\r\n  }\r\n  body{\r\n      background-color: var(--bg);\r\n  }\r\n  h1, h2, h3, h4, h5, h6, p, label, th{\r\n      color: var(--color-text);\r\n  }\r\n  \r\n  .flex, .descricao {\r\n      display: flex;\r\n  }\r\n      .item {\r\n          margin: 5px;\r\n          background: tomato;\r\n          text-align: center;\r\n          font-size: 2.0em;\r\n          flex: 1;\r\n          text-shadow: 1px 0px 0px black, \r\n          -1px 0px 0px black, \r\n          0px 1px 0px black, \r\n          0px -1px 0px black;\r\n      }\r\n      .grow0 {\r\n          flex-grow: 0;\r\n      }\r\n      .grow1 {\r\n          flex-grow: 1;\r\n      }\r\n  \r\n  \r\n  .container {\r\n      font-size: .85vw;\r\n  }\r\n  span {\r\n      font-size: 21px;\r\n      color: black;\r\n      font-weight: bold;\r\n  }\r\n  table{\r\n      background-color: rgba(0, 0, 0, 0.01);\r\n      border-radius: 5px;\r\n      margin: 10px 8px;\r\n  }\r\n  tr{\r\n      font-size: 1em;\r\n  }\r\n  td{\r\n      text-shadow: 1px 0px var(--color-text);\r\n      \r\n  }\r\n  th, td{\r\n      font-family: 'Arial';\r\n      text-align: center;\r\n  }\r\n  tr:hover{\r\n      background-color: rgba(0, 0, 0, 0.04);\r\n  }\r\n  \r\n    .material-icons {\r\n      font-family: 'Material Icons';\r\n      font-weight: normal;\r\n      font-style: normal;\r\n      font-size: 24px;\r\n      line-height: 1;\r\n      letter-spacing: normal;\r\n      text-transform: none;\r\n      display: inline-block;\r\n      white-space: nowrap;\r\n      word-wrap: normal;\r\n      direction: ltr;\r\n      -webkit-font-feature-settings: 'liga';\r\n      -webkit-font-smoothing: antialiased;\r\n    }\r\n    #updateParadas{\r\n      position: absolute;\r\n      bottom: 0.056%;\r\n      left:  1%;\r\n      font-size: 2.5em;\r\n  }\r\n    @media(max-height: 480px) and (max-width:640px) {\r\n      img{\r\n          width: 75px;\r\n          height: 75px;\r\n      }\r\n      span{\r\n          font-size: 14px;\r\n      }\r\n      h1{\r\n          font-size: 20px;\r\n          \r\n      }\r\n      .material-icons{\r\n          font-size:30px;\r\n      }\r\n      div.item.flex-item-1{\r\n          font-size:18px;        \r\n          margin-bottom: -15px;\r\n          padding-left: 5%;\r\n      }\r\n  }\r\n  @media(min-width: 641px)and(max-width: 800px ){\r\n      img{\r\n          width: 75px;\r\n          height: 75px;\r\n      }\r\n      span{\r\n          font-size: 14px;\r\n      }\r\n      h1{\r\n          font-size: 25px;\r\n          \r\n      }\r\n      div.item.flex-item-1{\r\n          font-size:18px;        \r\n          margin-bottom: -15px;\r\n          padding-left: 16%;\r\n      }\r\n  }\r\n  @media(min-width: 801px)and(max-width: 854px ){\r\n      img{\r\n          width: 75px;\r\n          height: 75px;\r\n      }\r\n      span{\r\n          font-size: 14px;\r\n      }\r\n      h1{\r\n          font-size: 25px;\r\n          \r\n      }\r\n      div.item.flex-item-1{\r\n          font-size:18px;        \r\n          margin-bottom: -15px;\r\n          padding-left: 16%;\r\n      }\r\n  }\r\n  @media(min-height: 481px)and(max-height: 640px ){\r\n      img{\r\n          width: 75px;\r\n          height: 75px;\r\n      }\r\n      span{\r\n          font-size: 14px;\r\n      }\r\n      h1{\r\n          font-size: 25px;\r\n          \r\n      }\r\n      div.item.flex-item-1{\r\n          font-size:28px;        \r\n          margin-bottom: -15px;\r\n          \r\n      } \r\n  }\r\n  @media(min-height: 641px)and(max-height: 750px ){\r\n      img{\r\n          width: 75px;\r\n          height: 75px;\r\n      }\r\n      span{\r\n          font-size: 14px;\r\n      }\r\n      h1{\r\n          font-size: 25px;\r\n          \r\n      }\r\n      div.item.flex-item-1{\r\n          font-size:20px;        \r\n          margin-bottom: -15px;\r\n          padding-left: 15%;\r\n      } \r\n  }\r\n  </style>","import { render } from \"./ParadasView.vue?vue&type=template&id=8cb15cac&scoped=true\"\nimport script from \"./ParadasView.vue?vue&type=script&lang=js\"\nexport * from \"./ParadasView.vue?vue&type=script&lang=js\"\n\nimport \"./ParadasView.vue?vue&type=style&index=0&id=8cb15cac&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\simone\\\\Documents\\\\desenvolvimento\\\\injettv-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8cb15cac\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","$props","_hoisted_3","_hoisted_4","_Fragment","$data","pt","index","_hoisted_5","style","cor","cdPt","descricao","tempo","name","components","props","cd","String","created","setInterval","this","getParadas","data","sec","color","pts","turno","maquinas","undefined","legendaColors1","nome","legendaColors2","methods","async","axios","params","cdGalpao","then","paradas","alertas","alerta","parada","pts_","formatado","par","paradasGalpao","length","tempoFormatado","tempoParado","split","push","cdInjetora","dsParada","ale","alertasGalpao","alertaFormatado","tempoAlerta","dsAlerta","concat","filter","forEach","maquina","catch","error","mounted","__exports__","render"],"sourceRoot":""}